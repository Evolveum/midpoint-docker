version: "3.3"

services:
  data_init:
    image: evolveum/midpoint:${MP_VER:-latest}
    command: >
        bash -c "
        chmod 777 /opt/db-pw/ ;
        touch /opt/db-pw/db_init_in_progress ;
        echo -e '#!/bin/sh\ntouch /opt/db-pw/db_init' >/opt/db-init/000-start.sh ;
        echo -e '#!/bin/sh\necho DB structure init process has finished...\nrm -f /opt/db-pw/db_init_in_progress /opt/db-pw/db_init' > /opt/db-init/999-finish.sh ;
        /opt/midpoint/bin/midpoint.sh init-native
        "
    environment:
     - MP_CHECK=/opt/db-pw/init_in_progress
     - MP_INIT_DB_CONCAT=/opt/db-init/010-init.sql
     - MP_INIT_CFG=/opt/mp-home
     - MP_DB_PW=/opt/db-pw/dbpassword
     - MP_PW_DEF=/opt/mp-home/keystorepw
    secrets:
     - mp_database_password.txt
     - mp_keystore_password.txt
    volumes:
     - db_init:/opt/db-init
     - db_pw:/opt/db-pw
     - midpoint_home:/opt/mp-home

  midpoint_data:
    image: postgres:13-alpine
    command: >
        bash -c "
        while [ ! -s /opt/db-pw/dbpassword -o -e /opt/db-pw/init_in_progress ] ; do 
         echo 'Waiting to the end of the init process...';
         sleep 1;
        done ;
        { 
         sleep 2 ; 
         if [ ! -e /opt/db-pw/db_init -a -e /opt/db-pw/db_init_in_progress ] ; 
          then echo 'DB init did not start...' ; 
          rm -f /opt/db-pw/db_ini*; 
          echo 'The lock files has been removed...'; 
         fi ; 
        } &
        docker-entrypoint.sh postgres
        "
    user: "70:70"    
    depends_on:
     - data_init
    environment:
     - POSTGRES_PASSWORD_FILE=/opt/db-pw/dbpassword
     - POSTGRES_USER=midpoint
     - POSTGRES_INITDB_ARGS=--lc-collate=en_US.utf8 --lc-ctype=en_US.utf8
    ports:
     - 5432:5432
    networks:
     - net
    volumes:
     - midpoint_data:/var/lib/postgresql/data
     - db_init:/docker-entrypoint-initdb.d/
     - db_pw:/opt/db-pw

  midpoint_server:
    image: evolveum/midpoint:${MP_VER:-latest}
    depends_on:
     - data_init
     - midpoint_data
    command: [ "/opt/midpoint/bin/midpoint.sh", "container" ]
    ports:
      - 8080:8080
    environment:
     - MP_CHECK=/opt/db-pw/db_init_in_progress
     - MP_SET_midpoint_repository_database=postgresql
     - MP_SET_midpoint_repository_jdbcUsername=midpoint
     - MP_SET_midpoint_repository_jdbcPassword_FILE=/opt/db-pw/dbpassword
     - MP_SET_midpoint_repository_jdbcUrl=jdbc:postgresql://midpoint_data:5432/midpoint
     - MP_SET_midpoint_keystore_keyStorePassword_FILE=/opt/midpoint/var/keystorepw
     - MP_UNSET_midpoint_repository_hibernateHbm2ddl=1
     - MP_NO_ENV_COMPAT=1
     - MP_ENTRY_POINT=/opt/midpoint-dirs-docker-entrypoint
    networks:
     - net
    volumes:
     - midpoint_home:/opt/midpoint/var
     - db_pw:/opt/db-pw
     - ./midpoint_server/container_files/mp-home:/opt/midpoint-dirs-docker-entrypoint/:ro


networks:
  net:    
    driver: bridge

volumes:
  db_init:
  db_pw:
  midpoint_data:
  midpoint_home:
